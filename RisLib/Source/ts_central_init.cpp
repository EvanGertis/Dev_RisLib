//******************************************************************************
//******************************************************************************
//******************************************************************************

#include "stdafx.h"

#include <stdarg.h>

#include "my_functions.h"
#include "risAlphaDir.h"

#include "tsShare.h"
#include "ts_central.h"

namespace TS
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Thread local storage.

// Thread local storage.
static thread_local ThreadLocal* gThreadLocal;

//******************************************************************************
//******************************************************************************
//******************************************************************************

void reset()
{
   strcpy(gShare.mProgramName, "SomeProgram");
}

void setProgramName(const char* aName)
{
   strncpy(gShare.mProgramName, aName, cMaxStringSize);
}

//***************************************************************************
//***************************************************************************
//***************************************************************************
// Access to thread local storage.

// Return a pointer to the thread local storage.
void setThreadLocal(ThreadLocal* aThreadLocal)
{
   gThreadLocal = aThreadLocal;
}

ThreadLocal* local()
{
   return gThreadLocal;
}

//***************************************************************************
//***************************************************************************
//***************************************************************************
// Print the test code.

void printCode()
{
   if (gThreadLocal)
   {
      printf("TS printCode %-20s %d\n", 
         gThreadLocal->mThreadName,
         gThreadLocal->mCode);
   }
   else
   {
      printf("TS printCode NOT INITIALIZED");
   }
}

//******************************************************************************
//******************************************************************************
//******************************************************************************

bool openFile()
{            
   char tBuf[400];
   char tFileName[400];
   strcpy(tFileName, gShare.mProgramName);
   strcat(tFileName,".txt");

   gShare.mLogFile = fopen(Ris::getAlphaFilePath_Log(tBuf,tFileName),"w");

   if (gShare.mLogFile==0)
   {
      return false;
   }

   return true;
}

//******************************************************************************
//******************************************************************************
//******************************************************************************

void closeFile()
{            
   if (gShare.mLogFile != 0)
   {
      fclose(gShare.mLogFile);
   }
   gShare.mLogFile=0;
}

//******************************************************************************
//******************************************************************************
//******************************************************************************
} //namespace

